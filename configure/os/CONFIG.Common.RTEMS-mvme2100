#
# CONFIG.Common.RTEMS-mvme2100
# Author: W. Eric Norum <wenorum@lbl.gov>
#
# All RTEMS targets use the same Makefile fragment
#
EXE = .elf
RTEMS_BSP = mvme2100
RTEMS_TARGET_CPU = powerpc
GNU_TARGET = powerpc-rtems
ARCH_DEP_CFLAGS += -DMY_DO_BOOTP=NULL
ARCH_DEP_CFLAGS += -DHAVE_PPCBUG

MUNCH_SUFFIX = .boot

# The mvme2100 BSP (and others of the "motorola_powerpc" family
# use a chain bootloader to relocate our executable from wherever
# PPCBUG leaves it.  This bootloader includes our executable in
# compressed form.
#
# Our process after creation of $< (eg. "iocfoo.elf")
# 1. Extract executable code as "iocfoo.app.bin"
# 2. Compress as "iocfoo.app.bin.gz"
# 3. Assemble iocfoo.boot.o with the verbatim contents of iocfoo.app.bin.gz
# 4. Link w/ bootloader to produce "iocfoo.boot" (which is an ELF executable)
define MUNCH_CMD
	$(RTEMS_TOOLS)/bin/$(OBJCOPY_FOR_TARGET) -O binary -R .comment -S $< $*.app.bin
	gzip -f9 $*.app.bin
	$(COMPILE.c) -IRTEMS_GZ=$*.app.bin.gz -c ppc_bug.S -o $*.boot.o
	$(RTEMS_TOOLS)/bin/$(LD_FOR_TARGET) -o $@ \
		 $(PROJECT_RELEASE)/lib/bootloader.o \
		--just-symbols=$< \
		-b binary $*.boot.o \
                --no-warn-mismatch \
		-T $(PROJECT_RELEASE)/lib/ppcboot.lds \
		-Map $@.map
endef

include $(CONFIG)/os/CONFIG.Common.RTEMS
